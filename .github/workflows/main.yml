name: main

on: [push, pull_request]

jobs:

    copySchemaFile:
      runs-on: ubuntu-latest
      steps:

      - uses: actions/checkout@master

      - name: Copy sogis-wms-qgs-content file
        run: |
          cp schemas/sogis-wms-qgs-content.json schemas/sogis-print-qgs-content.json
          cp schemas/sogis-wms-qgs-content.json schemas/sogis-edit-qgs-content.json

      - name: Commit changes
        run: | 
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Action"
          git add schemas/sogis-print-qgs-content.json schemas/sogis-edit-qgs-content.json
          git commit -m "[github-action] copy file sogis-wms-qgs-content.json" -a --allow-empty

      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          force: true
          tags: true

    test:
      runs-on: ubuntu-latest
      steps:

      - uses: actions/checkout@master

      - name: Start demo database and qgis-server 2
        run: |
          cd tests/docker
          docker-compose up -d

      - name: Setting up python 3.9
        uses: actions/setup-python@v2
        with:
            python-version: '3.9'

      - name: Run unittests
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python test.py

    release:
      needs: test
      runs-on: ubuntu-latest
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
      steps:

      - name: Get the version from tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Create release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: ${{ steps.get_version.outputs.VERSION }}
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          draft: false
      outputs:
        VERSION: ${{ steps.get_version.outputs.VERSION }}

    build:
      needs: release
      runs-on: ubuntu-latest
      steps:

      - name: Checkout
        uses: actions/checkout@master

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: sogis/json2qgs:${{ needs.release.outputs.VERSION }}
